stages:
  extract:
    cmd: python data_engineering/load_data.py --output_dir data/raw --start_date ${start_date}
    deps:
      - data_engineering/load_data.py
    params:
      - start_date
    outs:
      - data/raw:
          persist: true
  
  transform:
    cmd: python data_engineering/prepare_data.py --input_dir data/raw --output_dir data/prepared --sequence_length ${sequence_length} --prediction_horizon ${prediction_horizon}
    deps:
      - data_engineering/prepare_data.py
      - data/raw
    params:
      - sequence_length
      - prediction_horizon
    outs:
      - data/prepared:
          persist: true
      - data/test:
          persist: true
    
  #   hyperparameter_tuning:
  #   cmd: python model_training/tuning.py --data_path data/prepared/USD_INR_transformed.csv --sequence_length ${sequence_length} --mlflow_tracking_uri ${mlflow_tracking_uri} --experiment_name ${experiment_name}_tuning
  #   deps:
  #     - model_training/tuning.py
  #     - data/prepared/USD_INR_transformed.csv
  #   params:
  #     - sequence_length
  #     - mlflow_tracking_uri
  #     - experiment_name
  #   outs:
  #     - tuning_results:
  #         persist: true
  
  # train:
  #   cmd: >
  #     python model_training/train.py 
  #     --data_path data/prepared/USD_INR_transformed.csv
  #     --sequence_length ${sequence_length} 
  #     --hidden_size ${model.hidden_size} 
  #     --num_layers ${model.num_layers} 
  #     --dropout ${model.dropout} 
  #     --batch_size ${training.batch_size} 
  #     --learning_rate ${training.learning_rate} 
  #     --num_epochs ${training.num_epochs} 
  #     --mlflow_tracking_uri ${mlflow_tracking_uri} 
  #     --experiment_name ${experiment_name} 
  #     --model_dir models
  #   deps:
  #     - model_training/train.py
  #     - data/prepared/USD_INR_transformed.csv
  #     - tuning_results/best_params.json
  #   params:
  #     - sequence_length
  #     - model
  #     - training
  #     - mlflow_tracking_uri
  #     - experiment_name
  #   outs:
  #     - models:
  #         persist: true
  
  # evaluate:
  #   cmd: >
  #     python model_training/evaluation.py 
  #     --model_run_id $(cat models/model_info_*.json | jq -r '.run_id') 
  #     --data_path data/prepared/test_data.csv 
  #     --sequence_length ${sequence_length} 
  #     --reference_data_path data/prepared/train_data.csv 
  #     --mlflow_tracking_uri ${mlflow_tracking_uri} 
  #     --output_dir evaluation_results
  #   deps:
  #     - model_training/evaluation.py
  #     - data/prepared/test_data.csv
  #     - data/prepared/train_data.csv
  #     - models
  #   params:
  #     - sequence_length
  #     - mlflow_tracking_uri
  #   outs:
  #     - evaluation_results:
  #         persist: true
  
  # check_drift:
  #   cmd: >
  #     python model_training/drift.py 
  #     --evaluation_results evaluation_results 
  #     --threshold ${drift.threshold} 
  #     --trigger_rebuild ${drift.trigger_rebuild}
  #   deps:
  #     - model_training/drift.py
  #     - evaluation_results
  #     - utils/logger.py
  #   params:
  #     - drift.threshold
  #     - drift.trigger_rebuild
  #   outs:
  #     - model_monitoring:
  #         persist: true
  
  # save_model:
  #   cmd: python model_training/save_run.py --run_id $(cat models/model_info_*.json | jq -r '.run_id') --mlflow_tracking_uri ${mlflow_tracking_uri} --output_dir model_deployment
  #   deps:
  #     - model_training/save_run.py
  #     - models
  #     - evaluation_results
  #   params:
  #     - mlflow_tracking_uri
  #   outs:
  #     - model_deployment:
  #         persist: true
  #   always_changed: true
  #   frozen: false